# We generally prefer &&/|| but like low-precedence and/or in context
Style/AndOr:
  Enabled: false

Style/ArgumentsForwarding:
  Enabled: true

Style/ArrayCoercion:
  Enabled: true

Style/ArrayIntersect:
  Enabled: true

Style/AutoResourceCleanup:
  Enabled: true

Style/BlockDelimiters:
  Exclude:
    - "**/app/views/**/*.rb"

# Prefer Foo.method over Foo::method
Style/ColonMethodCall:
  Enabled: true

Style/CollectionCompact:
  Enabled: true

Style/CollectionMethods:
  Enabled: true

Style/ComparableClamp:
  Enabled: true

Style/ConstantVisibility:
  Enabled: false

Style/ConcatArrayLiterals:
  Enabled: true

Style/DataInheritance:
  Enabled: true

Style/DefWithParentheses:
  Enabled: true

Style/DirEmpty:
  Enabled: true

Style/Documentation:
  Enabled: false

Style/DocumentDynamicEvalDefinition:
  Enabled: true

Style/EmptyHeredoc:
  Enabled: true

Style/EnvHome:
  Enabled: true

Style/ExactRegexpMatch:
  Enabled: true

Style/EndlessMethod:
  Enabled: true
  EnforcedStyle: allow_single_line

Style/FileEmpty:
  Enabled: true

Style/FileWrite:
  Enabled: true

Style/FrozenStringLiteralComment:
  Enabled: true

Style/FetchEnvVar:
  Enabled: true

Style/FileRead:
  Enabled: true

Style/HashConversion:
  Enabled: true

Style/HashExcept:
  Enabled: true

# Use Ruby >= 1.9 syntax for hashes. Prefer { a: :b } over { :a => :b }.
Style/HashSyntax:
  Enabled: true
  EnforcedShorthandSyntax: either

Style/IfWithBooleanLiteralBranches:
  Enabled: true

Style/ImplicitRuntimeError:
  Enabled: true

Style/InPatternThen:
  Enabled: true

Style/InvertibleUnlessCondition:
  Enabled: true

Style/InlineComment:
  Enabled: false

Style/IpAddresses:
  Enabled: true

Style/Lambda:
  EnforcedStyle: literal

Style/MagicCommentFormat:
  Enabled: true

Style/MultilineInPatternThen:
  Enabled: true

Style/MapCompactWithConditionalBlock:
  Enabled: true

Style/MapToHash:
  Enabled: true

Style/MapToSet:
  Enabled: true

Style/MethodCallWithArgsParentheses:
  Enabled: false

Style/MethodCalledOnDoEndBlock:
  Enabled: true

# Defining a method with parameters needs parentheses.
Style/MethodDefParentheses:
  Enabled: true

Style/MinMaxComparison:
  Enabled: true

Style/MultilineMethodSignature:
  Enabled: true

Style/NegatedIfElseCondition:
  Enabled: true

Style/NestedFileDirname:
  Enabled: true

Style/NilLambda:
  Enabled: true

Style/NumberedParameters:
  Enabled: true
  EnforcedStyle: disallow

Style/NumberedParametersLimit:
  Enabled: true

Style/NumericLiterals:
  Enabled: true
  Exclude:
    - '**/db/migrate/*'

Style/ParenthesesAroundCondition:
  Enabled: true

Style/PercentLiteralDelimiters:
  Enabled: true
  PreferredDelimiters:
    default: "()"
    "%i": "[]"
    "%I": "[]"
    "%r": "{}"
    "%w": "[]"
    "%W": "[]"

# Use quotes for string literals when they are enough.
Style/RedundantPercentQ:
  Enabled: false

Style/ObjectThen:
  Enabled: true
  EnforcedStyle: then

Style/OpenStructUse:
  Enabled: true

Style/OperatorMethodCall:
  Enabled: true

Style/OptionHash:
  Enabled: true

Style/QuotedSymbols:
  Enabled: true

Style/ParenthesesAroundCondition:
  Enabled: true

Style/RedundantArrayConstructor:
  Enabled: true

Style/RedundantCurrentDirectoryInPath:
  Enabled: true

Style/RedundantFilterChain:
  Enabled: true

Style/RedundantHeredocDelimiterQuotes:
  Enabled: true

Style/RedundantLineContinuation:
  Enabled: true

Style/RedundantRegexpArgument:
  Enabled: true

Style/RedundantRegexpConstructor:
  Enabled: true

Style/RedundantReturn:
  Enabled: true
  AllowMultipleReturnValues: true

Style/RedundantSelfAssignmentBranch:
  Enabled: true

Style/RedundantArgument:
  Enabled: true

Style/RedundantConstantBase:
  Enabled: true

Style/RedundantDoubleSplatHashBraces:
  Enabled: true

Style/RedundantEach:
  Enabled: true

Style/RedundantInitialize:
  Enabled: true

Style/RedundantStringEscape:
  Enabled: true

Style/ReturnNilInPredicateMethodDefinition:
  Enabled: true

Style/SelectByRegexp:
  Enabled: true

Style/Semicolon:
  Enabled: true
  AllowAsExpressionSeparator: true

Style/SingleLineDoEndBlock:
  Enabled: true

Style/StaticClass:
  Enabled: true

Style/StringChars:
  Enabled: true

Style/StringHashKeys:
  Enabled: false

Style/StabbyLambdaParentheses:
  Enabled: true

Style/SwapValues:
  Enabled: true

# Use `"foo"` not `'foo'` unless escaping is required
Style/StringLiterals:
  Enabled: true
  EnforcedStyle: double_quotes
  Include:
    - "app/**/*"
    - "config/**/*"
    - "lib/**/*"
    - "test/**/*"
    - "spec/**/*"
    - "Gemfile"

Style/StringLiteralsInInterpolation:
  EnforcedStyle: double_quotes

Style/TopLevelMethodDefinition:
  Enabled: true

Style/TrailingCommaInBlockArgs:
  Enabled: true

Style/TrailingCommaInArrayLiteral:
  Enabled: true

Style/TrailingCommaInHashLiteral:
  Enabled: true

Style/YAMLFileRead:
  Enabled: true

Style/UnlessLogicalOperators:
  Enabled: true

Style/WordArray:
  Enabled: true
